name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: Build
        run: npm run build
    #   - name: Test
    #     run: npm run test
    #   - name: e2e tests
    #     uses: cypress-io/github-action@v5
    #     with:
    #       command: npm run test:e2e
    #       start: npm run start-prod
    #       wait-on: "http://localhost:5000"
      - name: Trigger deployment to Render
        if: ${{github.event_name == 'push' && contains(toJson(github.event.commits.*.message), 'skip') == false}}
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

      # - name: Build success notification
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: success()
      #   with:
      #     severity: info
      #     details: Test Succeeded!
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
      # - name: Build failure notification
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: failure()
      #   with:
      #     severity: error
      #     details: Test Failed!
      #     description: ${{ github.event.commits.*.message }} broke the build
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}

  # a_test_job:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: github context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJson(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: commits
  #       env:
  #         COMMITS: ${{ toJson(github.event.commits) }}
  #       run: echo "$COMMITS"
  #     - name: commit messages
  #       env:
  #         COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
  #       run: echo "$COMMIT_MESSAGES"
  #     - name: contains skip
  #       env:
  #         SKIP: ${{ contains(toJson(github.event.commits.*.message), 'skip') == false }}
  #       run: echo "$SKIP"

  tag_release:
    needs: simple_deployment_pipeline
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        if: github.event_name == 'push' && contains(toJson(github.event.commits.*.message), 'skip') == false
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: true
          DEFAULT_BUMP: patch

